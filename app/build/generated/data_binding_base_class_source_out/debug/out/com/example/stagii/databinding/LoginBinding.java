// Generated by view binder compiler. Do not edit!
package com.example.stagii.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stagii.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnLogin;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputLayout etEmailContainer;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final TextInputLayout etPasswordContainer;

  @NonNull
  public final LinearLayout loginContainer;

  @NonNull
  public final TextView tvForgetPassword;

  @NonNull
  public final TextView tvLoginHeading;

  @NonNull
  public final TextView tvLoginSubHeading;

  @NonNull
  public final TextView tvSignup;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton btnLogin,
      @NonNull TextInputEditText etEmail, @NonNull TextInputLayout etEmailContainer,
      @NonNull TextInputEditText etPassword, @NonNull TextInputLayout etPasswordContainer,
      @NonNull LinearLayout loginContainer, @NonNull TextView tvForgetPassword,
      @NonNull TextView tvLoginHeading, @NonNull TextView tvLoginSubHeading,
      @NonNull TextView tvSignup) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etEmail = etEmail;
    this.etEmailContainer = etEmailContainer;
    this.etPassword = etPassword;
    this.etPasswordContainer = etPasswordContainer;
    this.loginContainer = loginContainer;
    this.tvForgetPassword = tvForgetPassword;
    this.tvLoginHeading = tvLoginHeading;
    this.tvLoginSubHeading = tvLoginSubHeading;
    this.tvSignup = tvSignup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      MaterialButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etEmailContainer;
      TextInputLayout etEmailContainer = ViewBindings.findChildViewById(rootView, id);
      if (etEmailContainer == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etPasswordContainer;
      TextInputLayout etPasswordContainer = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordContainer == null) {
        break missingId;
      }

      id = R.id.loginContainer;
      LinearLayout loginContainer = ViewBindings.findChildViewById(rootView, id);
      if (loginContainer == null) {
        break missingId;
      }

      id = R.id.tvForgetPassword;
      TextView tvForgetPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvForgetPassword == null) {
        break missingId;
      }

      id = R.id.tvLoginHeading;
      TextView tvLoginHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginHeading == null) {
        break missingId;
      }

      id = R.id.tvLoginSubHeading;
      TextView tvLoginSubHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginSubHeading == null) {
        break missingId;
      }

      id = R.id.tvSignup;
      TextView tvSignup = ViewBindings.findChildViewById(rootView, id);
      if (tvSignup == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, btnLogin, etEmail, etEmailContainer,
          etPassword, etPasswordContainer, loginContainer, tvForgetPassword, tvLoginHeading,
          tvLoginSubHeading, tvSignup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
