// Generated by view binder compiler. Do not edit!
package com.example.stagii.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stagii.R;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cvManageAccount;

  @NonNull
  public final MaterialCardView cvUpdateResume;

  @NonNull
  public final ImageView ivManageAccountLogo;

  @NonNull
  public final ImageView ivPopOut;

  @NonNull
  public final ImageView ivUpdateResumeLogo;

  @NonNull
  public final LinearLayout llOperationContainer;

  @NonNull
  public final LinearLayout llUserContainer;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView tvManageAccountHeading;

  @NonNull
  public final TextView tvUpdateResumeHeading;

  @NonNull
  public final TextView tvUserEmail;

  @NonNull
  public final TextView tvUsername;

  private UserProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cvManageAccount, @NonNull MaterialCardView cvUpdateResume,
      @NonNull ImageView ivManageAccountLogo, @NonNull ImageView ivPopOut,
      @NonNull ImageView ivUpdateResumeLogo, @NonNull LinearLayout llOperationContainer,
      @NonNull LinearLayout llUserContainer, @NonNull CircleImageView profileImage,
      @NonNull TextView tvManageAccountHeading, @NonNull TextView tvUpdateResumeHeading,
      @NonNull TextView tvUserEmail, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.cvManageAccount = cvManageAccount;
    this.cvUpdateResume = cvUpdateResume;
    this.ivManageAccountLogo = ivManageAccountLogo;
    this.ivPopOut = ivPopOut;
    this.ivUpdateResumeLogo = ivUpdateResumeLogo;
    this.llOperationContainer = llOperationContainer;
    this.llUserContainer = llUserContainer;
    this.profileImage = profileImage;
    this.tvManageAccountHeading = tvManageAccountHeading;
    this.tvUpdateResumeHeading = tvUpdateResumeHeading;
    this.tvUserEmail = tvUserEmail;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvManageAccount;
      MaterialCardView cvManageAccount = ViewBindings.findChildViewById(rootView, id);
      if (cvManageAccount == null) {
        break missingId;
      }

      id = R.id.cvUpdateResume;
      MaterialCardView cvUpdateResume = ViewBindings.findChildViewById(rootView, id);
      if (cvUpdateResume == null) {
        break missingId;
      }

      id = R.id.ivManageAccountLogo;
      ImageView ivManageAccountLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivManageAccountLogo == null) {
        break missingId;
      }

      id = R.id.ivPopOut;
      ImageView ivPopOut = ViewBindings.findChildViewById(rootView, id);
      if (ivPopOut == null) {
        break missingId;
      }

      id = R.id.ivUpdateResumeLogo;
      ImageView ivUpdateResumeLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivUpdateResumeLogo == null) {
        break missingId;
      }

      id = R.id.llOperationContainer;
      LinearLayout llOperationContainer = ViewBindings.findChildViewById(rootView, id);
      if (llOperationContainer == null) {
        break missingId;
      }

      id = R.id.llUserContainer;
      LinearLayout llUserContainer = ViewBindings.findChildViewById(rootView, id);
      if (llUserContainer == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.tvManageAccountHeading;
      TextView tvManageAccountHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvManageAccountHeading == null) {
        break missingId;
      }

      id = R.id.tvUpdateResumeHeading;
      TextView tvUpdateResumeHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvUpdateResumeHeading == null) {
        break missingId;
      }

      id = R.id.tvUserEmail;
      TextView tvUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserEmail == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new UserProfileBinding((ConstraintLayout) rootView, cvManageAccount, cvUpdateResume,
          ivManageAccountLogo, ivPopOut, ivUpdateResumeLogo, llOperationContainer, llUserContainer,
          profileImage, tvManageAccountHeading, tvUpdateResumeHeading, tvUserEmail, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
