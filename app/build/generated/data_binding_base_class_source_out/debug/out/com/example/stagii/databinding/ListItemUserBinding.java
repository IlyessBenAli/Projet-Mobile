// Generated by view binder compiler. Do not edit!
package com.example.stagii.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stagii.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemUserBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Chip btnApply;

  @NonNull
  public final MaterialCardView cvMockTest;

  @NonNull
  public final CircleImageView ivMockTestLogo;

  @NonNull
  public final TextView tvMockTestAttemptStatus;

  @NonNull
  public final TextView tvMockTestName;

  private ListItemUserBinding(@NonNull MaterialCardView rootView, @NonNull Chip btnApply,
      @NonNull MaterialCardView cvMockTest, @NonNull CircleImageView ivMockTestLogo,
      @NonNull TextView tvMockTestAttemptStatus, @NonNull TextView tvMockTestName) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.cvMockTest = cvMockTest;
    this.ivMockTestLogo = ivMockTestLogo;
    this.tvMockTestAttemptStatus = tvMockTestAttemptStatus;
    this.tvMockTestName = tvMockTestName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      Chip btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      MaterialCardView cvMockTest = (MaterialCardView) rootView;

      id = R.id.ivMockTestLogo;
      CircleImageView ivMockTestLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivMockTestLogo == null) {
        break missingId;
      }

      id = R.id.tvMockTestAttemptStatus;
      TextView tvMockTestAttemptStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvMockTestAttemptStatus == null) {
        break missingId;
      }

      id = R.id.tvMockTestName;
      TextView tvMockTestName = ViewBindings.findChildViewById(rootView, id);
      if (tvMockTestName == null) {
        break missingId;
      }

      return new ListItemUserBinding((MaterialCardView) rootView, btnApply, cvMockTest,
          ivMockTestLogo, tvMockTestAttemptStatus, tvMockTestName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
