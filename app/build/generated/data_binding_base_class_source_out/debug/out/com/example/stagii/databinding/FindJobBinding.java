// Generated by view binder compiler. Do not edit!
package com.example.stagii.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stagii.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FindJobBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final TextInputEditText etSearch;

  @NonNull
  public final TextInputLayout etSearchContainer;

  @NonNull
  public final RecyclerView rvJobs;

  @NonNull
  public final TextView tvSearchHeading;

  private FindJobBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull TextInputEditText etSearch,
      @NonNull TextInputLayout etSearchContainer, @NonNull RecyclerView rvJobs,
      @NonNull TextView tvSearchHeading) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.etSearch = etSearch;
    this.etSearchContainer = etSearchContainer;
    this.rvJobs = rvJobs;
    this.tvSearchHeading = tvSearchHeading;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FindJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FindJobBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.find_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FindJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.etSearch;
      TextInputEditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.etSearchContainer;
      TextInputLayout etSearchContainer = ViewBindings.findChildViewById(rootView, id);
      if (etSearchContainer == null) {
        break missingId;
      }

      id = R.id.rvJobs;
      RecyclerView rvJobs = ViewBindings.findChildViewById(rootView, id);
      if (rvJobs == null) {
        break missingId;
      }

      id = R.id.tvSearchHeading;
      TextView tvSearchHeading = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchHeading == null) {
        break missingId;
      }

      return new FindJobBinding((ConstraintLayout) rootView, bottomNavigation, etSearch,
          etSearchContainer, rvJobs, tvSearchHeading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
